<!--***************************************************************************** 
* Copyright 2016 Aurora Solutions 
* 
*    http://www.aurorasolutions.io 
* 
* Aurora Solutions is an innovative services and product company at 
* the forefront of the software industry, with processes and practices 
* involving Domain Driven Design(DDD), Agile methodologies to build 
* scalable, secure, reliable and high performance products.
* 
* TradeSharp is a C# based data feed and broker neutral Algorithmic 
* Trading Platform that lets trading firms or individuals automate 
* any rules based trading strategies in stocks, forex and ETFs. 
* TradeSharp allows users to connect to providers like Tradier Brokerage, 
* IQFeed, FXCM, Blackwood, Forexware, Integral, HotSpot, Currenex, 
* Interactive Brokers and more. 
* Key features: Place and Manage Orders, Risk Management, 
* Generate Customized Reports etc 
* 
* Licensed under the Apache License, Version 2.0 (the "License"); 
* you may not use this file except in compliance with the License. 
* You may obtain a copy of the License at 
* 
*    http://www.apache.org/licenses/LICENSE-2.0 
* 
* Unless required by applicable law or agreed to in writing, software 
* distributed under the License is distributed on an "AS IS" BASIS, 
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
* See the License for the specific language governing permissions and 
* limitations under the License. 
*****************************************************************************-->


ï»¿<mah:MetroWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:views="clr-namespace:TradeHubGui.Views" 
                    x:Class="TradeHubGui.Views.SettingsWindow"
                    GlowBrush="Silver"
                    Title="Settings" Height="300" Width="500">

    <mah:MetroWindow.Resources>
        <x:Array x:Key="Contents" Type="UserControl">
            <views:HistoricalParametersView/>
            <views:NotificationSettingsView/>
            <views:AddLicenseView/>
        </x:Array>
        
        <Style x:Key="NavigationListBoxItemStyle" TargetType="{x:Type ListBoxItem}" >
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.Effect>
                                <DropShadowEffect Opacity="0.2" ShadowDepth="0.0"/>
                            </Grid.Effect>
                            <Border x:Name="border" Grid.Column="0" Margin="-2,0,0,0"/>
                            <Border x:Name="contentBorder" Grid.Column="0">
                                <ContentPresenter VerticalAlignment="Center" />
                            </Border>
                            <Path x:Name="path" Grid.Column="1" Data="M0.5,0.5 L34.5,17.583333 0.5,34.5 z" HorizontalAlignment="Left" Height="{Binding Height, ElementName=border}" Stretch="Fill" Width="15"  />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource HoverBrush}"/>
                                <Setter Property="Fill" TargetName="path" Value="{DynamicResource HoverBrush}"/>
                                <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                                <Setter Property="Opacity" TargetName="path" Value="0.5"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource BaseBrush0}"/>
                                <Setter Property="Fill" TargetName="path" Value="{DynamicResource BaseBrush0}"/>
                                <Setter Property="Opacity" TargetName="border" Value="1"/>
                                <Setter Property="Opacity" TargetName="path" Value="1"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource BaseBrush0}"/>
                                <Setter Property="Fill" TargetName="path" Value="{DynamicResource BaseBrush0}"/>
                                <Setter Property="Opacity" TargetName="border" Value="1"/>
                                <Setter Property="Opacity" TargetName="path" Value="1"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </mah:MetroWindow.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition  Width="Auto"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <Border Grid.Row="1" Grid.Column="0" Background="#FFD1D1D1" Width="85" HorizontalAlignment="Left"/>

        <ListBox Grid.Row="1" Grid.Column="0" x:Name="NavigationListBox" SelectedIndex="0" BorderThickness="0" 
                 Background="Transparent" Margin="-2,-1,-1,-1" Foreground="White"
                 ItemContainerStyle="{DynamicResource NavigationListBoxItemStyle}">
            <ListBoxItem Style="{StaticResource NavigationListBoxItemStyle}" Tag="{Binding Source={StaticResource Contents}, Path=[0]}"
                         Content="Historical Data" Margin="3,0,0,0">
            </ListBoxItem>
            <ListBoxItem Style="{StaticResource NavigationListBoxItemStyle}" Tag="{Binding Source={StaticResource Contents}, Path=[1]}"
                         Content="Notifications" Margin="3,0,0,0">
            </ListBoxItem>
            <ListBoxItem Style="{StaticResource NavigationListBoxItemStyle}" Tag="{Binding Source={StaticResource Contents}, Path=[2]}"
                         Content="License Details" Margin="3,0,0,0">
            </ListBoxItem>
        </ListBox>

        <ContentControl Grid.Row="1" Grid.Column="1" Margin="10,0,0,0" Content="{Binding SelectedItem.Tag, ElementName=NavigationListBox}"/>
    </Grid>
</mah:MetroWindow>
