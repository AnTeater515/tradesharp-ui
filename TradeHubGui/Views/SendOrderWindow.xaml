<!--***************************************************************************** 
* Copyright 2016 Aurora Solutions 
* 
*    http://www.aurorasolutions.io 
* 
* Aurora Solutions is an innovative services and product company at 
* the forefront of the software industry, with processes and practices 
* involving Domain Driven Design(DDD), Agile methodologies to build 
* scalable, secure, reliable and high performance products.
* 
* TradeSharp is a C# based data feed and broker neutral Algorithmic 
* Trading Platform that lets trading firms or individuals automate 
* any rules based trading strategies in stocks, forex and ETFs. 
* TradeSharp allows users to connect to providers like Tradier Brokerage, 
* IQFeed, FXCM, Blackwood, Forexware, Integral, HotSpot, Currenex, 
* Interactive Brokers and more. 
* Key features: Place and Manage Orders, Risk Management, 
* Generate Customized Reports etc 
* 
* Licensed under the Apache License, Version 2.0 (the "License"); 
* you may not use this file except in compliance with the License. 
* You may obtain a copy of the License at 
* 
*    http://www.apache.org/licenses/LICENSE-2.0 
* 
* Unless required by applicable law or agreed to in writing, software 
* distributed under the License is distributed on an "AS IS" BASIS, 
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
* See the License for the specific language governing permissions and 
* limitations under the License. 
*****************************************************************************-->
    
    
<mah:MetroWindow x:Class="TradeHubGui.Views.SendOrderWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                 xmlns:wpfToolkitExtended="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
                 xmlns:views="clr-namespace:TradeHubGui.Views"
                 xmlns:conv="clr-namespace:TradeHubGui.Converters"
                 GlowBrush="Silver"
                 ShowInTaskbar="False"
                 WindowStartupLocation="CenterOwner"
                 Title="Send Order"
                 SizeToContent="WidthAndHeight"
                 MinWidth="550" MinHeight="480">
    <mah:MetroWindow.Resources>
        <conv:ProviderConnectionStatusToBrushConverter x:Key="ConnectionStatusToBrush"/>
    </mah:MetroWindow.Resources>

    <Grid Grid.IsSharedSizeScope="True" Background="White" VerticalAlignment="Center" MaxWidth="800">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" SharedSizeGroup="gr1"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto" SharedSizeGroup="gr1"/>
        </Grid.ColumnDefinitions>

        <TextBlock Margin="22,10,0,0" Text="{Binding OrderModel.Security.Symbol, FallbackValue=N/A}" TextAlignment="Center" MinWidth="72"
                       Style="{StaticResource HeaderTextBlockStyle}" FontWeight="Thin" FontSize="36"/>

        <!--<Border Grid.Row="0" Grid.ColumnSpan="3" VerticalAlignment="Center" BorderThickness="0,0,0,2" Margin="0,6,0,0"
                BorderBrush="{Binding SelectedOrderExecutionProvider.ConnectionStatus, Converter={StaticResource ConnectionStatusToBrush}, FallbackValue={StaticResource RedBrush}}" />-->

        <StackPanel Grid.Row="0" Grid.Column="1" Margin="20,60,20,20">
            <Label Content="Order execution provider" />
            <ComboBox Name="MarketDataProvidersComboBox" FontWeight="Bold" Height="26"
                      ItemsSource="{Binding OrderExecutionProviders}" 
                      SelectedItem="{Binding SelectedOrderExecutionProvider}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <DockPanel Margin="0,2">
                            <TextBlock DockPanel.Dock="Right" Text="{Binding ConnectionStatus}" Foreground="{Binding ConnectionStatus, Converter={StaticResource ConnectionStatusToBrush}}" 
                                    FontWeight="SemiBold" Typography.Capitals="AllSmallCaps" Margin="0,0,0,2" FontSize="12"/>
                            <TextBlock Text="{Binding ProviderName}" VerticalAlignment="Center"/>
                        </DockPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            
            <Grid Margin="0,10,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="90"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,10,0">
                    <Label Content="Type" />
                    <ComboBox FontWeight="Bold" Height="26"
                              ItemsSource="{Binding OrderTypesCollection}" 
                              SelectedItem="{Binding SelectedOrderType}"/>
                </StackPanel>

                <StackPanel Grid.Column="2" Margin="10,0,0,0">
                    <Label Content="Trigger price"/>
                    <wpfToolkitExtended:DecimalUpDown Value="{Binding OrderModel.TriggerPrice, FallbackValue=0}" Minimum="0" Increment="0.01" FontWeight="Bold" Height="26" 
                                                      TabIndex="0"/>
                </StackPanel>
            </Grid>
        </StackPanel>

        <Border Grid.Row="1" Grid.ColumnSpan="3" Background="{StaticResource GrayBrush}" Opacity="0.15"/>

        <Grid Grid.Row="1" Grid.Column="1" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="90"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" Margin="10">
                <Label Content="Price"/>
                <wpfToolkitExtended:DecimalUpDown Height="28" Value="{Binding OrderModel.BuyPrice, FallbackValue=0}" Minimum="0" Increment="0.01" 
                                                  TabIndex="1"
                                                  FontWeight="SemiBold" FontSize="16" Foreground="{StaticResource RedBrush}"/>
                <Button Content="Buy" Height="{Binding}" FontSize="22" Padding="8" FontWeight="Bold" Foreground="{StaticResource RedBrush}"
                        Command="{Binding SendBuyOrderCommand}" TabIndex="4"/>
            </StackPanel>

            <StackPanel Grid.Column="1" Margin="10">
                <Label Content="Size"/>
                <wpfToolkitExtended:IntegerUpDown Height="28" VerticalAlignment="Center" Value="{Binding OrderModel.Size, FallbackValue=0}" Minimum="0" FontWeight="Bold" 
                                                  TabIndex="2"/>
            </StackPanel>

            <StackPanel Grid.Column="2" Margin="10">
                <Label Content="Price"/>
                <wpfToolkitExtended:DecimalUpDown Height="28" Value="{Binding OrderModel.SellPrice, FallbackValue=0}" Minimum="0" Increment="0.01" 
                                                  TabIndex="3"
                                                  FontWeight="SemiBold" FontSize="16" Foreground="{StaticResource BaseBrush3}"/>
                <Button Content="Sell" Height="{Binding}" FontSize="22" Padding="8" FontWeight="Bold" Foreground="{StaticResource BaseBrush3}"
                        Command="{Binding SendSellOrderCommand}" TabIndex="5"/>
            </StackPanel>
        </Grid>

        <DockPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Margin="20">
            <StackPanel Orientation="Vertical" Margin="10">
                <Label Content="Position"/>
                <TextBlock Text="{Binding PositionStatistics.Position, FallbackValue=-150}" FontWeight="Bold" FontSize="14" TextAlignment="Center" VerticalAlignment="Center" Margin="4,0"/>
                <Button Content="Close" Command="{Binding ClosePositionCommand}" Margin="0,2,0,0" Height="{Binding}" Padding="3" FontSize="14" FontWeight="SemiBold" />
            </StackPanel>

            <StackPanel Grid.Row="2" Margin="10" Orientation="Vertical" HorizontalAlignment="Right">
                <Label Content="PnL"/>
                <TextBlock Text="{Binding PositionStatistics.Pnl, FallbackValue=15.3}" FontWeight="Normal" FontSize="34" TextAlignment="Left" VerticalAlignment="Center" Margin="0,0"/>
            </StackPanel>
        </DockPanel>
    </Grid>
</mah:MetroWindow>
