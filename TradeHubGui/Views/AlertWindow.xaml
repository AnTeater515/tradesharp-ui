<!--***************************************************************************** 
* Copyright 2016 Aurora Solutions 
* 
*    http://www.aurorasolutions.io 
* 
* Aurora Solutions is an innovative services and product company at 
* the forefront of the software industry, with processes and practices 
* involving Domain Driven Design(DDD), Agile methodologies to build 
* scalable, secure, reliable and high performance products.
* 
* TradeSharp is a C# based data feed and broker neutral Algorithmic 
* Trading Platform that lets trading firms or individuals automate 
* any rules based trading strategies in stocks, forex and ETFs. 
* TradeSharp allows users to connect to providers like Tradier Brokerage, 
* IQFeed, FXCM, Blackwood, Forexware, Integral, HotSpot, Currenex, 
* Interactive Brokers and more. 
* Key features: Place and Manage Orders, Risk Management, 
* Generate Customized Reports etc 
* 
* Licensed under the Apache License, Version 2.0 (the "License"); 
* you may not use this file except in compliance with the License. 
* You may obtain a copy of the License at 
* 
*    http://www.apache.org/licenses/LICENSE-2.0 
* 
* Unless required by applicable law or agreed to in writing, software 
* distributed under the License is distributed on an "AS IS" BASIS, 
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
* See the License for the specific language governing permissions and 
* limitations under the License. 
*****************************************************************************-->
    
    
<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                 xmlns:views="clr-namespace:TradeHubGui.Views" 
                 x:Class="TradeHubGui.Views.AlertWindow"
                 FlowDirection="{Binding TitleFlowDirection}"
                 ShowInTaskbar="False"
                 WindowStartupLocation="CenterOwner"
                 Width="280" Height="120"
                 ResizeMode="NoResize" WindowStyle="None" AllowsTransparency="True" Background="Transparent">

    <Grid x:Name="NotificationGrid" >
        <Border Background="{StaticResource BaseBackground}" BorderThickness="0" CornerRadius="10" Margin="10">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="0" Opacity="0.8" BlurRadius="10"/>
            </Border.Effect>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Grid Background="Transparent" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Width="180" HorizontalAlignment="Left" Margin="4,4,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.Effect>
                        <DropShadowEffect Opacity="0.2" ShadowDepth="0.0"/>
                    </Grid.Effect>
                    <Border x:Name="contentBorder" Background="{DynamicResource BaseBrush0}" Grid.Column="0" CornerRadius="10,0,0,0">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Border>
                    <Path x:Name="path" Grid.Column="1" Data="M0.5,0.5 L34.5,17.583333 0.5,34.5 z" HorizontalAlignment="Left" Height="{Binding Height, ElementName=border}" 
                          Stretch="Fill" Width="8" Fill="{DynamicResource BaseBrush0}" />

                    <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding Path=AlertMessage.Title}" TextOptions.TextRenderingMode="ClearType"
                               TextOptions.TextFormattingMode="Display" HorizontalAlignment="Left"  VerticalAlignment="Center"
                               FontSize="12" FontFamily="Segoe UI" FontWeight="Bold" Foreground="White" Width="140"
                               Margin="12,0,0,0" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" />

                </Grid>
                
                <Button Grid.Row="0" Grid.Column="1" Width="16" Height="16" HorizontalAlignment="Right" Margin="0,2,10,0" 
                        Click="OnCloseButtonClick" Focusable="False" Style="{StaticResource CloseButtonStyle}">
                    <Image Source="{StaticResource imgCloseGrey}" Height="10" Width="10"></Image>
                </Button>

                <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Background="GhostWhite" BorderThickness="0" Margin="4" CornerRadius="0,0,10,10"/>

                <Image Grid.Row="1" Grid.Column="0" Source="{StaticResource imgInformationBlue}" Margin="12,0,0,0" Height="50" Width="50"
                       VerticalAlignment="Center"/>

                <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Path=AlertMessage.Summary}" FontSize="12" FontFamily="Segoe UI" FontWeight="Bold"
                               TextOptions.TextRenderingMode="ClearType" TextOptions.TextFormattingMode="Display" TextWrapping="Wrap"
                               Foreground="{StaticResource BaseBrush0}" VerticalAlignment="Top" Margin="12,12,10,0"
                               TextTrimming="CharacterEllipsis" />
            </Grid>
        </Border>

        <Grid.Triggers>
            <EventTrigger RoutedEvent="Window.Loaded" SourceName="NotificationGrid">
                <BeginStoryboard x:Name="FadeInStoryBoard">
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="NotificationGrid" From="0.01" To="1" Storyboard.TargetProperty="Opacity" Duration="0:0:2"/>
                        <DoubleAnimation Storyboard.TargetName="NotificationGrid" From="1" To="0" Storyboard.TargetProperty="Opacity" Duration="0:0:2" BeginTime="0:0:6"
                                         Completed="CloseMethod"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Window.MouseEnter" SourceName="NotificationGrid">
                <SeekStoryboard Offset="0:0:3" BeginStoryboardName="FadeInStoryBoard" />
                <PauseStoryboard BeginStoryboardName="FadeInStoryBoard" />
            </EventTrigger>
            <EventTrigger RoutedEvent="Window.MouseLeave" SourceName="NotificationGrid">
                <SeekStoryboard Offset="0:0:3" BeginStoryboardName="FadeInStoryBoard" />
                <ResumeStoryboard BeginStoryboardName="FadeInStoryBoard"></ResumeStoryboard>
            </EventTrigger>
        </Grid.Triggers>
    </Grid>
    
    <Window.Triggers>
    </Window.Triggers>
</Window>
